---
- name: install Ubuntu packages
  include: "os_{{ ansible_facts['distribution'] }}.yml"
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: install debian packages
  include: "os_{{ ansible_facts['distribution'] }}.yml"
  when: ansible_facts['distribution'] == 'Debian'

- name: install centos packages
  include: "os_{{ ansible_facts['distribution'] }}.yml"
  when: ansible_facts['distribution'] == 'CentOS'

- name: install Archlinux packages
  include: "os_{{ ansible_facts['distribution'] }}.yml"
  when: ansible_facts['distribution'] == 'Archlinux'

- name: disable motd
  systemd:
    name: motd
    state: stopped
  when: ansible_facts['os_family'] == 'Debian'

- name: create update-motd.d folder
  file:
    path: /etc/update-motd.d
    state: directory
  when: ansible_facts['os_family'] == "Debian"

- name: remove motd file
  file:
    path: /etc/motd
    state: absent
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure Ensure /etc/update-motd/20-logo exists
  copy:
    src: files/etc/motd/20-logo
    dest: /etc/update-motd.d/20-logo
    owner: root
    group: root
    mode: '0550'
  when: ansible_facts['os_family'] == "Debian"

- name: "set timezone"
  timezone:
    name: "{{ sys_timezone }}"
  when: sys_timezone is defined

- name: ensure locale {{ sys_locale }} exists
  community.general.locale_gen:
    name: "{{ sys_locale }}"
    state: present
  when: sys_locale is defined

- name: ensure systemd-timesyncd.conf file
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^=?NTP'
    line: 'NTP=0.uk.pool.ntp.org 1.uk.pool.ntp.org 2.uk.pool.ntp.org 3.uk.pool.ntp.org'
    state: present
  notify: restart systemd-timesyncd
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure systemd-timesyncd.conf is running
  systemd:
    name: systemd-timesyncd
    state: started
    enabled: yes
    daemon_reload: yes
  notify: restart systemd-timesyncd
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure sshd_config file
  copy:
    src: files/etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
  notify: restart_sshd

- name: Ensure ssh service is started and enabled
  systemd:
    enabled: yes
    daemon_reload: yes 
    name: ssh
  when: ansible_facts['os_family'] == "Debian"

- name: add user
  user:
    name: "{{ ansible_user }}"
    append: yes
    state: present
    createhome: yes
    shell: "{{ ansible_user_shell }}"
    groups: "{{ ansible_user_groups }}"

- name: set ansible user id_rsa key
  authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ ansible_user_key_files }}"
    state: present

- name: allow Ansible User to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    line: '"{{ ansible_user }}" ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Ensure zshrc file
  copy:
    src: files/home/zshrc
    dest: /home/schoolboy/.zshrc
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0750'

#- name: Ensure logrotate service file
#  template:
#    src: templates/newitem.j2
#    dest: "/home/schoolboy/{{ item.name }}.txt"
#    #    owner: root
#    #    group: "{{ root_group }}"
#    #    mode: '0644'
#  with_items:
#    - "{{ services }}"

#- name: ensure logrotate is started
#  systemd:
#    name: logrotate.service
#    state: started
#    enabled: yes
...
